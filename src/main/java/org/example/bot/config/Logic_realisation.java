package org.example.bot.config;

import org.example.bot.TelegramBot;
import org.example.bot.dao.PersonDAO;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;

public class Logic_realisation {

    public void showHelloMessage(SendMessage sendMessage, Update update) {
        sendMessage.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫—É—é!\n" +
                "–ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏ –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä–∞");

        InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

        List<InlineKeyboardButton> rowInline_1 = new ArrayList<>();

        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton();
        inlineKeyboardButton1.setText("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è");
        inlineKeyboardButton1.setCallbackData("signup");
        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton();
        inlineKeyboardButton2.setText("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—á–µ—Ä–µ–¥—å");
        inlineKeyboardButton2.setCallbackData("see_the_queue");

        rowInline_1.add(inlineKeyboardButton1);
        rowInline_1.add(inlineKeyboardButton2);

        List<InlineKeyboardButton> rowInline_2 = new ArrayList<>();

        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton();
        inlineKeyboardButton3.setText("–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ");
        inlineKeyboardButton3.setCallbackData("portfolio");
        InlineKeyboardButton inlineKeyboardButton4 = new InlineKeyboardButton();
        inlineKeyboardButton4.setText("–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã");
        inlineKeyboardButton4.setCallbackData("workTime");

        rowInline_2.add(inlineKeyboardButton3);
        rowInline_2.add(inlineKeyboardButton4);
        rowsInline.add(rowInline_1);
        rowsInline.add(rowInline_2);

        markupInline.setKeyboard(rowsInline);
        sendMessage.setReplyMarkup(markupInline);

        try {
            Thread.sleep(10000);
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }


    }

    public void showWorkTime(SendMessage sendMessage) {
        sendMessage.setText("–ü—Ä–∏–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è " +
                "–∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –∏ —Å—Ä–µ–¥—É —Å 19:00 –¥–æ 23:00 " +
                "\uD83D\uDD52.\n \n–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º " +
                "–Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å " +
                "–æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É üë®‚Äçüíª. " +
                "–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –ø–æ–º–æ—á—å! \uD83D\uDE0A");
    }

    public void onSignUp(SendMessage sendMessage, PersonDAO dao) {

        if (dao.getMondaySize() < 5 || dao.getWednesdaySize() < 5) {


            sendMessage.setText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –¥–ª—è –≤–∞—Å –¥–∞—Ç—É");

            Calendar calendar = new GregorianCalendar();
            DateFormat df = new SimpleDateFormat("E, d MMM yyy");

            InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();
            List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();

            List<InlineKeyboardButton> rowInline1 = new ArrayList<>();
            List<InlineKeyboardButton> rowInline2 = new ArrayList<>();

            InlineKeyboardButton firstAvvailable = new InlineKeyboardButton();
            firstAvvailable.setText(df.format(calendar.getTime()) + (", –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ—Å—Ç: " + (5 - dao.getMondaySize())));
            firstAvvailable.setCallbackData("queueForFirstDay");

            calendar.roll(Calendar.DAY_OF_WEEK, +2);
            InlineKeyboardButton secondAvvailable = new InlineKeyboardButton();
            secondAvvailable.setText(df.format(calendar.getTime()) + (", –¥–æ—Å—Ç—É–ø–Ω–æ –º–µ—Å—Ç: " + (5 - dao.getMondaySize())));
            secondAvvailable.setCallbackData("queueForFirstDay");

            rowInline1.add(firstAvvailable);
            rowInline2.add(secondAvvailable);
            rowsInline.add(rowInline1);
            rowsInline.add(rowInline2);
            markupInline.setKeyboard(rowsInline);
            sendMessage.setReplyMarkup(markupInline);

        } else {
            sendMessage.setText("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ –º–µ—Å—Ç–∞ —É–∂–µ –∑–∞–Ω—è—Ç—ã \uD83D\uDE14. –ù–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π—Ç–µ! " +
                    "–í—ã –º–æ–∂–µ—Ç–µ –≤—Å—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –∏ –º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ–º –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è. –ö–∞–∫ –≤–∞–º —Ç–∞–∫–∞—è –∏–¥–µ—è? \uD83D\uDD52");

            InlineKeyboardMarkup markupInline = new InlineKeyboardMarkup();


            List<InlineKeyboardButton> rowInline = new ArrayList<>();

            InlineKeyboardButton setQueue = new InlineKeyboardButton();
            setQueue.setText("–°—Ç–∞—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å");
            setQueue.setCallbackData("put_person_in_queue");

            rowInline.add(setQueue);
            markupInline.setKeyboard(Collections.singletonList(rowInline));
            sendMessage.setReplyMarkup(markupInline);

        }
    }

    public void showRegisterMenu(SendMessage sendMessage, PersonDAO dao) {
        Calendar calendar = new GregorianCalendar();
        if (calendar.get(Calendar.DAY_OF_WEEK) == 3) {

            sendMessage.setText("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏");
            TelegramBot bot = new TelegramBot();
            bot.setKey("R9&zK2@Lp1");



        }
    }
}
